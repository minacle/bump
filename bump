#!/bin/bash

# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <http://unlicense.org>

BUMPEE=()

while IFS= read -r -d $'\0' PLIST
do
    if [ "$(defaults read "$PWD/$PLIST" Bump 2>/dev/null)" == 1 ]
    then
        BUMPEE=("${BUMPEE[@]}" "$PLIST")
    fi
done < <(find . -name '*.plist' -print0)

for PLIST in "${BUMPEE[@]}"
do
    VERSION=$(defaults read "$PWD/$PLIST" CFBundleVersion 2>/dev/null)
    if [ -z "$VERSION" ]
    then
        continue
    fi
    MAJOR=$(echo $VERSION | cut -d. -f1)
    MINOR=$(echo $VERSION | cut -d. -f2)
    BUILD=$(echo $VERSION | cut -d. -f3)
    REVISION=$(echo $VERSION | cut -d. -f4)
    case "$1" in
    '')
        MAJOR=$(($MAJOR + 1))
        MINOR=0
        BUILD=0
        REVISION=0
        ;;
    '.')
        MINOR=$(($MINOR + 1))
        BUILD=0
        REVISION=0
        ;;
    '..')
        BUILD=$(($BUILD + 1))
        REVISION=0
        ;;
    '...')
        REVISION=$(($REVISION + 1))
        ;;
    *)
        exit 1
    esac
    defaults write "$PWD/$PLIST" CFBundleVersion $MAJOR.$MINOR.$BUILD.$REVISION
    defaults write "$PWD/$PLIST" CFBundleShortVersionString $MAJOR.$MINOR.$BUILD
    plutil -convert xml1 "$PWD/$PLIST"
    echo "$PLIST"
done

echo "$VERSION -> $MAJOR.$MINOR.$BUILD.$REVISION"
